# ---

# 方案一、使用原版openjdk:8-jdk-alpine镜像，升级jdk
# 220MB >>> 1.8.0_275

# FROM openjdk:8-jdk-alpine
# ENV TZ="Asia/Shanghai"
# ENV LANG="en_US.UTF-8"
# ENV LANGUAGE="en_US.UTF-8"
# ENV LC_ALL="en_US.UTF-8"
# ENV ALPINE_MIRROR="mirrors.tuna.tsinghua.edu.cn"
# RUN sed -i "s/dl-cdn.alpinelinux.org/${ALPINE_MIRROR}/g" /etc/apk/repositories && \
#     apk update --no-cache && \
#     apk add --upgrade --no-cache openjdk8 openjdk8-jre-base && \
#     apk add --upgrade --no-cache tzdata && \
#     echo "Asia/Shanghai" > /etc/timezone && \
#     ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \
#     \
#     rm -rf /var/cache/apk/*.*

# ---

# 方案二、基于alpine:3镜像，带glibc，下载upstream-binaries自行安装，删除多余文件
# https://github.com/adoptium/temurin8-binaries/releases/download/jdk8u345-b01/OpenJDK8U-jdk_x64_alpine-linux_hotspot_8u345b01.tar.gz
# 167MB >>> 1.8.0_345

# FROM youken9980/alpine:3-glibc
# ENV JAVA_HOME="/usr/share/openjdk-8"
# ENV PATH=".:$PATH:$JAVA_HOME/bin"
# RUN set -eux && \
#     FILE_NAME="openjdk-8" && \
#     DOWNLOAD_URL="https://ghproxy.com/https://github.com/adoptium/temurin8-binaries/releases/download/jdk8u345-b01/OpenJDK8U-jdk_x64_alpine-linux_hotspot_8u345b01.tar.gz" && \
#     wget -O $FILE_NAME.tar.gz $DOWNLOAD_URL && \
#     mkdir -p $JAVA_HOME && \
#     tar --strip 1 -zxvf $FILE_NAME.tar.gz -C $JAVA_HOME && \
#     chown -R root:root $JAVA_HOME && \
#     \
#     JAVA_SECURITY="$JAVA_HOME/jre/lib/security" && \
#     SECURITY_CACERTS="$JAVA_SECURITY/cacerts" && \
#     apk --update --no-cache add java-cacerts && \
#     rm -rf $SECURITY_CACERTS && \
#     mkdir -p $JAVA_SECURITY && \
#     ln -sT /etc/ssl/certs/java/cacerts $SECURITY_CACERTS && \
#     rm -rf /var/cache/apk/*.* && \
#     \
#     rm $FILE_NAME.tar.gz && \
#     cd $JAVA_HOME && \
#     rm -rf man/ \
#            sample/ \
#            src.zip

# ---

# 方案三、基于alpine:3镜像，带glibc，使用apk安装
# 122MB >>> 1.8.0_345

# FROM youken9980/alpine:3-glibc
# ENV JAVA_HOME="/usr/lib/jvm/default-jvm"
# ENV PATH=".:$PATH:$JAVA_HOME/bin"
# RUN apk --update --no-cache add openjdk8 && \
#     \
#     JAVA_SECURITY="$JAVA_HOME/lib/security" && \
#     SECURITY_CACERTS="$JAVA_SECURITY/cacerts" && \
#     apk --update --no-cache add java-cacerts && \
#     rm -rf $SECURITY_CACERTS && \
#     mkdir -p $JAVA_SECURITY && \
#     ln -sT /etc/ssl/certs/java/cacerts $SECURITY_CACERTS && \
#     rm -rf /var/cache/apk/*.* && \
#     \
#     rm -rf /etc/fonts \
#            /usr/share/fontconfig \
#            /usr/share/fonts \
#            /usr/share/udhcpc \
#            /usr/share/xml \
#            /var/cache/apk/*.* \
#            /var/cache/fontconfig/*.*

# ---

FROM youken9980/alpine:3-glibc
LABEL maintainer="YangJian <youken9980@163.com>"

ENV JAVA_HOME="/usr/lib/jvm/default-jvm"
ENV PATH=".:$PATH:$JAVA_HOME/bin"

RUN apk --update --no-cache add openjdk8 && \
    \
    JAVA_SECURITY="$JAVA_HOME/lib/security" && \
    SECURITY_CACERTS="$JAVA_SECURITY/cacerts" && \
    apk --update --no-cache add java-cacerts && \
    rm -rf $SECURITY_CACERTS && \
    mkdir -p $JAVA_SECURITY && \
    ln -sT /etc/ssl/certs/java/cacerts $SECURITY_CACERTS && \
    rm -rf /var/cache/apk/*.* && \
    \
    rm -rf /etc/fonts \
           /usr/share/fontconfig \
           /usr/share/fonts \
           /usr/share/udhcpc \
           /usr/share/xml \
           /var/cache/apk/*.* \
           /var/cache/fontconfig/*.*

STOPSIGNAL SIGTERM

CMD [ "/bin/sh" ]
